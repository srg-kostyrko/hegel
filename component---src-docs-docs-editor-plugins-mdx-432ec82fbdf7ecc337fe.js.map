{"version":3,"sources":["webpack:///../src/docs/docs/editor-plugins.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"mcAMO,IAAMA,EAAe,Q,kNAE5B,IAKMC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,KAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,kBADR,kBAGA,uBACA,8BACE,iBAAGC,WAAW,cAAd,wCAEF,qLAEA,iCACA,sBACE,kBAAIA,WAAW,MAAK,mBAAGA,WAAW,MAAS,CACvC,KAAQ,wBADQ,wBAItB,iBAAQ,CACN,GAAM,sBADR,sBAGA,6CAA4B,mBAAGA,WAAW,KAAQ,CAC9C,KAAQ,MADgB,6BAA5B,iBAGA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,0JAOL,iBAAQ,CACN,GAAM,gBADR,gBAGA,wFACA,sBACE,kBAAIA,WAAW,MAAf,eAEF,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,kDAIL,iBAAQ,CACN,MAAS,GAET,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,8DAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,sCAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kC,gNAORJ,EAAWK,gBAAiB","file":"component---src-docs-docs-editor-plugins-mdx-432ec82fbdf7ecc337fe.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/hegel/hegel/packages/docs/node_modules/gatsby-theme-docz/src/base/Layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"editor-plugins\"\n    }}>{`Editor Plugins`}</h1>\n    <hr></hr>\n    <blockquote>\n      <p parentName=\"blockquote\">{`Editor plugin still in development `}</p>\n    </blockquote>\n    <p>{`You can improve your developer experience with Hegel by using editor integrations.\nHegel tries to provide editor support for: Type hints and Error display.`}</p>\n    <p>{`Plugins:`}</p>\n    <ul>\n      <li parentName=\"ul\"><a parentName=\"li\" {...{\n          \"href\": \"#visual-studio-code\"\n        }}>{`Visual Studio Code`}</a></li>\n    </ul>\n    <h2 {...{\n      \"id\": \"visual-studio-code\"\n    }}>{`Visual Studio Code`}</h2>\n    <p>{`You can install from `}<a parentName=\"p\" {...{\n        \"href\": \"/\"\n      }}>{`Visual Studio Code Market`}</a>{` or manually.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git clone https://github.com/JSMonk/hegel\n$ cd hegel/packages/language-server\n$ npm run compile\n$ code --install-extension ./hegel-plugin.vsix\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"debug-plugin\"\n    }}>{`Debug plugin`}</h2>\n    <p>{`If you are interested in debugging the plugin then you need to:`}</p>\n    <ol>\n      <li parentName=\"ol\">{`Clone repo`}</li>\n    </ol>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ git clone https://github.com/JSMonk/hegel\n`}</code></pre>\n    <ol {...{\n      \"start\": 2\n    }}>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Open hegel/packages/language-server in Visual Studio Code`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Go to the \"Run and Debug\" section`}</p>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Run \"Extension\" option`}</p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}